// List of required privileges for client commands
// If present, the second column may contain a service name between [] to forward the command
// Warning: leaving the second column blank means that everyone can use the command

// R2 Commands
dssTarget				::			// ask DSS to perform a GM action on the player's target

// Commands
//
addGuildMember				:DEV:SGM:GM:EM:					// Add a new member to a guild: <guild name> <member name>
addGuildXp					:DEV:SGM:GM:EM:					// Add xp to a guild: <guild name> <xp (positive or negative)>
addPetAnimal				:DEV:SGM:GM:EM:					// Add pet animal to character: <PetTicket>
addPosFlag					:DEV:SGM:GM:EM:					// Add a new position flag: <flag name>
addSkillPoints				:DEV:SGM:GM:EM:					// Add skill points of given type (Fight=0, Magic=1, Craft=2, Harvest=3): <SP type [0..3]> <nb SP>
addXPToSkill				:DEV:SGM:GM:EM:					// Gain experience in the given skill: <xp> <skill> [<count>]
broadcast					:DEV:SGM:GM:EM:VG:				// Broadcast a message: [repeat=<num repeat> or during=<time in seconds>] [every=<delay in secondes>] <message>
changeHairCut				:DEV:SGM:GM:EM:					// Change the haircut of a player: <sheet name>
changeMode					:DEV:SGM:GM:EM:					// Change mode of a player: <mode>
changeVar					:DEV:SGM:GM:EM:					// Change a variable of a player: <var> <val>
checkTargetSP				:DEV:SGM:GM:					// Check target player skill points
clearEventFaction			:DEV:SGM:GM:EM:					// Clear the event faction of player: <player name>
clearFriendsList			:DEV:SGM:GM:					// Clear the friend list of a player
clearGuildMessage								// Clear the guild message of the day
clearIgnoreList				:DEV:SGM:GM:					// Clear the ignore list of a player
clearIsFriendOfList			:DEV:SGM:GM:					// Clear the "is friend of" list of a player
createItemInBag				:DEV:SGM:GM:EM:			audit	// Create an item and put it in the player bag: <sheetId>|<sheetName> <quantity> <quality>
createItemInInv				:DEV:							// Create an item and put it in the given player inventory: <invId> <sheetId>|<sheetName> <quantity> <quality>
createItemInTmpInv			:DEV:SGM:GM:EM:			audit	// Create an item and put it in the player temp inventory: <sheetId>|<sheetName> <quantity> <quality>
createNamedItemInBag		:DEV:SGM:				audit	// Create a named item and put it in the player bag: <item name> [<quantity>]
createFullArmorSet			:DEV:SGM:GM:EM:			audit	// Create and equip player with chosen full armor set: <race (fyros/matis/zorai/tryker)> <type (light/medium/heavy)> <quality>
delPosFlag					:DEV:SGM:GM:EM:					// Delete a position flag: <flag name>
dismiss						:DEV:SGM:GM:VG:SG:EM:EG:		// Teleport a player back to its former position (before last call to summonPlayer): <player name>
displayForageRM				:DEV:SGM:GM:EM:					// Display forageable raw materials near by or at the exact position of a player: <exactPos=1> <extendedInfo=0>
displayInfosOnTarget		:DEV:SGM:GM:EM:					// Display infos on entity target
dodge											// Set the defense mode to dodge
execPhrase					:DEV:SGM:GM:					// Execute a phrase with given bricks: <cyclic 0/1> [<brick ids>...]
executeSabrinaPhrase		:DEV:SGM:GM:					// Execute a sabrina phrase: <cyclic 0/1> <phraseId>
failMission					:DEV:SGM:GM:					// Force mission failure: <mission idx>
forceTargetToDie			:DEV:SGM:GM:EM:					// Force entity target to die
getEventFaction				:DEV:SGM:GM:EM:					// Get the event faction of player: <player name>
giveRespawnPoint			:DEV:SGM:GM:					// Give a respawn point to a player: <respawn point name>
guildInvite										// Send a guild invite to a player character without distance constrainte
setLeague										// Create a League 
leagueInvite									// Send a League invite to a Team Leader character without distance constrainte
leagueKick										// Kick a player or team from league
roomInvite										// Send a room invite
roomKick										// Remove a room invite
guildMOTD										// Set the guild message of the day, command effective only for officer and more graded guild members
ignoreTells					:DEV:SGM:GM:VG:SG:EM:EG:		// Ignore incoming tell: <0/false/1/true>
infos						:DEV:SGM:GM:VG:SG:G:EM:EG:		// Give info on character (GodMode, Invisible...)
killMob						:DEV:SGM:GM:EM:EG:				// Kill a mob (/b killMob)
learnAllBricks				:DEV:SGM:GM:EM:					// Specified player learns all possible bricks for his skill values
learnAllForagePhrases		:DEV:SGM:GM:EM:					// Learn all forage phrases, begin at specified index: <index>
learnAllPhrases				:DEV:SGM:GM:EM:					// Specified player learns all possible phrases for his skill values
learnBrick					:DEV:SGM:GM:EM:					// Specified player learns given brick: <brick sheet>
unlearnBrick				:DEV:SGM:GM:EM:					// Specified player unlearns given brick: <brick sheet>
learnPhrase					:DEV:SGM:GM:EM:					// Specified player learns a phrase and set it at index knownPhraseIndex: <phrase Sheet>
listGuildMembers			:DEV:SGM:GM:EM:					// Display guild members list: <guild name>
listPosFlags				:DEV:SGM:GM:VG:SG:G:EM:EG:		// List position flags (long format): [<radius in meters>]
loadFromPDR					:DEV:SGM:						// Load a character from a binary PDR file: <file name>
loadFromXML					:DEV:SGM:						// Load a character from an XML file: <file name>
logXpGain					:DEV:SGM:GM:					// Log or not xp gain infos for specified player: <on/off>
lPosFlags					:DEV:SGM:GM:VG:SG:G:EM:EG:		// List position flags (short format): [<radius in meters>]
monitorMissions				:DEV:SGM:GM:					// Monitor missions of the given player: <player name>
motd						:DEV:SGM:GM:EM:VG:				// Set the current message of the day: <message to be displayed>
mute						:DEV:SGM:GM:EM:VG:SG:			// Mute a user: <player name> <duration>
muteUniverse				:DEV:SGM:GM:EM:VG:SG:			// Mute the universe channel: <duration>
outpostBanGuild				:DEV:SGM:GM:EM:					// Ban a guild for an outpost conflit: <outpost_id> <guild_name> [<all|atk|def>]
outpostBanPlayer			:DEV:SGM:GM:EM:					// Ban a character for an outpost conflit: <outpost_id> <eid> [<all|atk|def>]
outpostUnbanGuild			:DEV:SGM:GM:EM:					// Unban a guild for an outpost conflit: <outpost_id> <guild_name> [<all|atk|def>]
outpostUnbanPlayer			:DEV:SGM:GM:EM:					// Unban a character for an outpost conflit: <outpost_id> <eid> [<all|atk|def>]
parry											// Set the defense mode to parry
progressMission				:DEV:SGM:GM:					// Force mission progression: <mission idx> [repeat]
renameGuild					:DEV:SGM:GM:EM:					// Rename a guild: <guild name> <new guild name>
renamePlayer		[SU]	:DEV:SGM:GM:EM:					// Rename a player: <player name> <new playerName>
renamePlayerForEvent		:DEV:SGM:GM:EM:EG:				// Rename a player temporarily for an event: <player name> <new playerName>
resetPowerFlags				:DEV:SGM:GM:EM:					// Reset the ineffective aura and the power flags for given character
root						:DEV:SGM:GM:EM:VG:SG:			// Root a player: <player name> <time in seconds>
saveToPDR					:DEV:SGM:						// Save a character to a binary PDR file: <file name>
saveToXML					:DEV:SGM:						// Save a character to an XML file: <file name>
setEventFaction				:DEV:SGM:GM:EM:					// Set the event faction of player: <player name> <event faction>
setGMGuild					:DEV:SGM:GM:					// Set the current GM guild
setGuildChargePoint			:DEV:SGM:GM:EM:					// Set the charge points of a guild: <guild name> <points>
setGuildDescription			:DEV:SGM:GM:EM:					// Set a guild description: <guild name> <new guild description>
setGuildLeader				:DEV:SGM:GM:EM:					// Set the leader of a guild: <guild name> <member name>
setGuildMemberGrade			:DEV:SGM:GM:EM:					// Set the grade of a guild member: <guild name> <member name> <grade = Member/Officer/HighOfficer/Leader>
setGuildMessage												// Set the guild message of the day: <message>
setItemSapLoad				:DEV:SGM:GM:EM:					// Set an item sap load: <slot index in bag (starts at 0)> <float value>
setPosFlag					:DEV:SGM:GM:EM					// Set a position flag: <flag name>
setPvPTag													// Set player character PvP tag to true or false
setFamePlayer				:DEV:SGM:GM:EM:					// Set the fame value of a player in the given faction: <faction> <fame>
resetPVPTimers				:DEV:SGM:GM:EM:					// Reset the pvp timers of a player: <player name>
setSkillsToMaxValue			:DEV:SGM:GM:EM:					// Set player skills to max value
showCSR						:DEV:SGM:GM:VG:SG:G:EM:EG:		// Show CSR title if the player is a CSR
showFBT						:DEV:SGM:GM:EM:					// Show Focus Beta Tester title if the player is a FBT
startEvent					:DEV:SGM:GM:EM:					// Start an event with the given name: <event name>
stopEvent					:DEV:SGM:GM:EM:					// Stop previous started event
stopMonitorMissions			:DEV:SGM:GM:					// Stop monitoring missions of the given player
summon						:DEV:SGM:GM:VG:SG:EM:			// Summon a player in front of the CSR: <player name>
targetInfos					:DEV:SGM:GM:EM:					// Give infos on the target
teamInvite										// Send a team invite to a player character
connectUserChannel								// Connect to User Channel Chat
connectLangChannel								// Connect to Lang Channel Chat
webExecCommand									// Execute web command (need HMAC signature)
webDelCommandsIds								// Delete web transactions for web_app
webAddCommandsIds								// Add web command transactions for web_app
updateTarget									// Update current target
teleport					:DEV:SGM:GM:VG:SG:G:OBSERVER:EM:EG:	// Teleport the CSR in front of a player: <player name>
tpPosFlag					:DEV:SGM:GM:VG:SG:G:EM:EG:		// Teleport a player to a position flag: <flag name>
universe					:DEV:SGM:GM:EM:					// Chat in universe mode: <boolean>
unmute						:DEV:SGM:GM:EM:VG:SG:			// Unmute a user: <player name>
unmuteUniverse				:DEV:SGM:GM:EM:VG:SG:			// Unmute the universe channel
unroot						:DEV:SGM:GM:EM:VG:SG:			// Stop rooting a player: <player name>
updateGuildMembersList		:DEV:SGM:GM:					// update guild members list on members clients: <guild name>
//setPvpClan				:DEV:							// choose a clan for pvp
summonPet										// player can summon it's pet one time only
allowSummonPet				:DEV:SGM:GM:					// autorize player to summon it's pet one time per pet
displayShopSelector			:DEV:SGM:						// display shop selector for a NPC
addFactionAttackableToTarget		:DEV:					// add attackable possibility for player on target for specified faction
forceMissionProgress			:DEV:						// force mission step progression (for debug purpose only)
savePlayerActiveChar			:DEV:SGM:					// save immediatly a player active char, a specific filename can enter for backup a character in specific situation/context
reloadPlayer				:DEV:SGM:						// set next filename used for loading a character (must be offline and log later) or relaod an online character to previous backup or with a specified filename.
farTPPush					:DEV:SGM:GM:VG:SG:EM:	audit	// used to tp on a specific session
farTPReturn					:DEV:SGM:GM:VG:SG:EM:			// used to tp back to your previous session
characterMissionDump			:DEV:SGM:GM:				// Dump mission list for a character
removeMission				:DEV:SGM:GM:					// Remove a mission of a character
addMission				:DEV:SGM:GM:						// add a mission to a character
characterInventoryDump		:DEV:SGM:GM:EM:					// Dump character inventory info: <inventory> <from slot> <to slot>
deleteInventoryItem			:DEV:SGM:GM:EM:					// Delete an item from a characters inventory: <inventory> <slot> <sheetname> <quality> <quantity>
lockItem													// Lock/unlock item for trading, selling, destruction.
setTeamLeader												// Set the team leader
setPetAnimalSatiety			:DEV:SGM:GM:EM:					// Set the satiety of pet animal (petIndex in 0..3): <petIndex> full|<value> [<nameForAnswer>]
getPetAnimalSatiety			:DEV:SGM:GM:EM:					// Get the satiety of pet animal (petIndex in 0..3): <petIndex> [<nameForAnswer>]
setPetAnimalName			:DEV:SGM:GM:EM:EG:				// Set the name of a pet animal (petIndex in 0..3): <petIndex> <name>
setSimplePhrase				:DEV:SGM:GM:EM:					// Set an IOS phrase: <id> <phrase> [<language code>]

// Variables
//
Aggro					:DEV:SGM:GM:VG:SG:EM:EG:	audit	// Mobs can aggro a player?
CreateCharacterStartSkillsValue		:DEV:SGM:GM:EM:			// Create character start skills, skill point and money
FBT					:DEV:SGM:GM:VG:EM:						// Is a Focus Beta Tester?
God					:DEV:SGM:GM:EM:					audit	// God mode, invulnerability
Invulnerable		:DEV:SGM:GM:EM:					audit	// Invulnerable mode, invulnerability to all
ShowFactionChannels			:DEV:SGM:GM:EM:VG:SG:G:			// Show faction channel for moderation
HP					:DEV:SGM:GM:EM:							// Hit points of a player
MaxHP					:DEV:SGM:GM:EM:						// Max hit points of a bot
Invisible				:DEV:SGM:GM:VG:SG:EM:EG:			// Invisibility of a player
Money					:DEV:SGM:GM:EM:						// Money of a player
Name					:DEV:SGM:GM:EM:						// Name of a player
Position				:DEV:SGM:GM:VG:PR:OBSERVER:EM:EG:	// Position of a player (in meters) <posx>,<posy>[,<posz>]] | <bot name> | <player name> | home
Priv					:DEV:								// User privilege
PriviledgePVP			:DEV:SGM:GM:EM:EG:					// Turns PVP on/off on character (blame coder for typo)
FullPVP			:DEV:SGM:GM:EM:EG:							// Turns Full PVP on/off on character
RyzomDate				:DEV:SGM:GM:EM:						// Current ryzom date
RyzomTime				:DEV:SGM:GM:EM:						// Current ryzom time

// Event commands
eventCreateNpcGroup			:DEV:SGM:GM:EM:					// Create a npc group
eScript						:DEV:SGM:GM:EM:					// Execute a script on an event npc group (new version)
eventNpcGroupScript			:DEV:SGM:GM:EM:					// Execute a script on an event npc group
eventSetBotName				:DEV:SGM:GM:EM:					// Set the name of a bot
eventSetBotScale			:DEV:SGM:GM:EM:					// Set the scale of a bot
eventSetNpcGroupAggroRange		:DEV:SGM:GM:EM:				// Set the aggro range of a NPC group
eventSetNpcGroupEmote		:DEV:SGM:GM:EM:					// Set the emote for the NPC group to execute 
eventSetFaunaBotAggroRange		:DEV:SGM:GM:EM:				// Set the aggro ranges (not hungry, hungry and hunting) of a fauna creature
eventResetFaunaBotAggroRange		:DEV:SGM:GM:EM:			// Reset the aggro range of a fauna creature to sheet values
eventSetBotCanAggro			:DEV:SGM:GM:EM:					// Define if a creature can take aggro for another entity
eventSetItemCustomText			:DEV:SGM:GM:EM:				// Set the custom text of an item. For scroll-like items it's the text displayed in the help window.
eventResetItemCustomText		:DEV:SGM:GM:EM:				// Reset the custom text of an item to an empty string.
eventSetBotSheet			:DEV:SGM:GM:EM:					// Changes the sheet of a bot: <.creature sheet>
eventSetBotFaction			:DEV:SGM:GM:EM:					// Changes the faction of a bot: <faction name>
eventSetBotFameByKill			:DEV:SGM:GM:EM:				// Changes the amount of fame earned for bot faction when killing it: <fame value>
eventSetBotURL					:DEV:SGM:GM:EM:				// Set the url of a bot
eventSetBotURLName				:DEV:SGM:GM:EM:				// Set the url name of a bot
eventSpawnToxic				:DEV:SGM:GM:EM:					// Add toxic cloud
eventNpcSay					:DEV:SGM:GM:EM:					// Have an NPC say a text
eventSetBotFacing			:DEV:SGM:GM:EM:					// Set the direction in which a bot faces
eventGiveControl			:DEV:SGM:GM:EM:					// Give control of entity A to entity B : <master eid> <slave eid>
eventLeaveControl			:DEV:SGM:GM:EM:					// Leave control of entity : <master eid>
resetName										// Reset player's name; undo a temporary rename
showOnline										// Set friend visibility: <user id> <mode=0,1,2>
