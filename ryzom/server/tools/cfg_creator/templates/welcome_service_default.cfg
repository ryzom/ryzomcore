#include "common.cfg"

// short name of the frontend service
FrontendServiceName = "FS";

// in ring architecture, we no more use the legacy LS
DontUseLS = 1;

// if any of this services is not connected, the WS is closed.
ExpectedServices = { "FS", "MS", "EGS", "GPMS", "IOS", "TICKS" };

// Access level to shard
// 0: only dev
// 1: dev + privileged users (see also OpenGroups variable)
// 2: open for all
ShardOpen = 2;

// File that contains the ShardOpen value (used to override ShardOpen value through AES' command createFile)
// For instance, ShardOpen default value is 0, then AES creates a file to set ShardOpen to 2. If WS crashes,
// ShardOpen is still set to 2 when it relaunches...
// ShardOpenStateFile = "/tmp/shard_open_state";

// Privileged Groups
OpenGroups = ":GM:SGM:G:SG:GUEST:";

UsePatchMode = 0;

// create welcome service module
StartCommands +=
{
	// create the service
	"moduleManager.createModule WelcomeService ws",
	// plug it in the gateway
	"ws.plug gw",

	// add the SU service
	"unifiedNetwork.addService ShardUnifier ( address="+SUAddress+" sendId external autoRetry )",
};
