// I'm the AES, I'll not connect to myself!
DontUseAES = 1;
// I don't need a connection to a naming service
DontUseNS = 1;
DontLog = 1;

AESAliasName= "aes";

//
DontUseStdIn = 0;

// Adress ofthe admin service (default port is 49996)
ASHost = "ep1.mini01.ryzomcore.local";

// Config for AES
AESPort = "46712";
AESHost = "localhost";
ASPort = "46711";


// in second, -1 for not restarting
RestartDelay = 60;

// how many second before aborting the request if not finished
RequestTimeout = 5;

// log path for advanced log report
LogPath = "/.";

// setup for deployment environment with external configuration system responsible for launching apps and
// for configuring AES services
DontLaunchServicesDirectly = 1;
UseExplicitAESRegistration = 1;
KillServicesOnDisconnect = 1;

// If the update loop is too slow, a thread will produce an assertion.
// By default, the value is set to 10 minutes.
// Set to 0 for no assertion.
UpdateAssertionThreadTimeout = 0;

DefaultMaxExpectedBlockSize = 200000000; // 200 M !
DefaultMaxSentBlockSize = 200000000; // 200 M !

// how to sleep between to network update
// 0 = pipe
// 1 = usleep
// 2 = nanosleep
// 3 = sched_yield
// 4 = nothing
UseYieldMethod = 0;

NegFiltersDebug    = { "REQUEST", "GRAPH", "ADMIN", "NET", "ADMIN", "MIRROR", "NC", "PATH", "BSIF" };
NegFiltersInfo     = { "REQUEST", "GRAPH", "ADMIN", "NET", "ADMIN", "MIRROR", "NC", "CF", " ping", " pong" };
NegFiltersWarning  = { "CT_LRC" };

#include "./aes_alias_name.cfg"

StartCommands=
{
	// Create a gateway module
	"moduleManager.createModule StandardGateway gw",
	// add a layer 5 transport
	"gw.transportAdd L5Transport l5",
	// open the transport
	"gw.transportCmd l5(open)",
		
	/// Create default connection with admin executor service
	// Create a gateway module
	"moduleManager.createModule StandardGateway gw_aes",
	// create the admin executor service module 
	"moduleManager.createModule AdminExecutorServiceClient aes_client",
	"aes_client.plug gw_aes",

	// create a layer 3 client to connect to aes gateway
	"gw_aes.transportAdd L3Client aes_l3c",
	"gw_aes.transportCmd aes_l3c(connect addr="+AESHost+":"+AESPort+")",
		

	// create the admin executor service module 
	"moduleManager.createModule AdminExecutorService aes",

	// create a gateway to connect to as
	"moduleManager.createModule StandardGateway asc_gw",
	// create a layer 3 client
	"asc_gw.transportAdd L3Client l3c",
	"asc_gw.transportCmd l3c(connect addr="+ASHost+":"+ASPort+")",

	// create a gateway for services to connect
	"moduleManager.createModule StandardGateway aes_gw",
	// create a layer 3 server
	"aes_gw.transportAdd L3Server l3s",
	"aes_gw.transportOptions l3s(PeerInvisible)",
	"aes_gw.transportCmd l3s(open port="+AESPort+")",

	// plug the as
	"aes.plug asc_gw",
	"aes.plug aes_gw",

};
